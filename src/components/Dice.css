.Dice-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: calc(var(--dice-side) * 2);
  height: calc(var(--dice-side) * 2);
  perspective: 1000px;
  perspective-origin: top right;
  transform: translateX(-1px);
}

.Dice {
  position: relative;
  width: var(--dice-side);
  height: var(--dice-side);
  transform-style: preserve-3d;
  animation: diceRotate 10s linear infinite;
}

@keyframes diceRotate {
  from { transform: rotateY(0deg) rotateX(720deg) rotateZ(0deg); }
  to { transform: rotateY(360deg) rotateX(0deg) rotateZ(360deg); }
}

.Dice-side {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: grid;
  width: 100%;
  height: 100%;
  padding: 10%;
  border-radius: 3px;
  background-color: #aaa;
}

.Dice-side span {
  display: block;
  align-self: center;
  justify-self: center;
  width: calc(var(--dice-side) * 0.15);
  height: calc(var(--dice-side) * 0.15);
  border-radius: 50%;
  background-color: #222;
}

.front {
  grid-template-columns: repeat(3, 33.33333%);
  grid-template-rows: repeat(3, 33.33333%);
  transform: translateZ(calc(var(--dice-side) / 2));
}

.front span:nth-of-type(1) {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.front span:nth-of-type(2) {
  grid-column: 3 / 4;
  grid-row: 1 / 2;
}

.front span:nth-of-type(3) {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}

.front span:nth-of-type(4) {
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}

.front span:nth-of-type(5) {
  grid-column: 3 / 4;
  grid-row: 3 / 4;
}

.back {
  grid-template-columns: repeat(2, 50%);
  grid-template-rows: repeat(2, 50%);
  transform: translateZ(calc(-1 * (var(--dice-side) / 2)));
}


.back span:nth-of-type(1) {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

.back span:nth-of-type(2) {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}

.left {
  grid-template-columns: repeat(2, 50%);
  grid-template-rows: repeat(3, 33.33333%);
  transform: rotateY(90deg) translateZ(calc(-1 * (var(--dice-side) / 2)));
}

.left span:nth-of-type(1) {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.left span:nth-of-type(2) {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

.left span:nth-of-type(3) {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}

.left span:nth-of-type(4) {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}

.left span:nth-of-type(5) {
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}

.left span:nth-of-type(6) {
  grid-column: 2 / 3;
  grid-row: 3 / 4;
}

.right {
  transform: rotateY(90deg) translateZ(calc(var(--dice-side) / 2));
}

.top {
  grid-template-columns: repeat(3, 33.33333%);
  grid-template-rows: repeat(3, 33.33333%);
  transform: rotateX(90deg) translateZ(calc(var(--dice-side) / 2));
}

.top span:nth-of-type(1) {
  grid-column: 3 / 4;
  grid-row: 1 / 2;
}

.top span:nth-of-type(2) {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}

.top span:nth-of-type(3) {
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}

.bottom {
  grid-template-columns: repeat(2, 50%);
  grid-template-rows: repeat(2, 50%);
  transform: rotateX(90deg) translateZ(calc(-1 * (var(--dice-side) / 2)));
}
